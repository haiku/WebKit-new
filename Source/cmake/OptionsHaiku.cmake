include(GNUInstallDirs)
include(VersioningUtils)

SET(PROJECT_VERSION_MAJOR 1)
SET(PROJECT_VERSION_MINOR 9)
SET(PROJECT_VERSION_PATCH 3)
SET(PROJECT_VERSION ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH})

add_definitions(-DHAIKU_WEBKIT_VERSION=\"${PROJECT_VERSION}\")
add_definitions(-DBUILDING_HAIKU__=1)

CALCULATE_LIBRARY_VERSIONS_FROM_LIBTOOL_TRIPLE(JAVASCRIPTCORE 25 4 7)

# Force libstdc++ to export std::isinf and friends. This should be fixed on
# Haiku side ultimately.
add_definitions(-D_GLIBCXX_USE_C99_MATH)

# Uncomment to enable logs even in release mode
# add_definitions(-DLOG_DISABLED=0 -DERROR_DISABLED=0 -DFATAL_DISABLED=0)

set(ENABLE_WEBKIT OFF)
set(ENABLE_WEBKIT_LEGACY ON)

set(USE_ANGLE_EGL OFF)

# To get assertions in release mode, we replace all -DNDEBUG with -UNDEBUG
# (they are automatically added by CMake and there is no "release with asserts"
# build available in WebKit)
#foreach(flag_var
#		CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE
#		CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO)
#	if(${flag_var} MATCHES "-DNDEBUG")
#		string(REGEX REPLACE "-DNDEBUG" "-UNDEBUG" ${flag_var} "${${flag_var}}")
#	endif(${flag_var} MATCHES "-DNDEBUG")
#endforeach(flag_var)
#set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fvisibility-inlines-hidden")

FIND_PACKAGE(SQLite3 REQUIRED)
FIND_PACKAGE(LibXml2 2.8.0 REQUIRED)
FIND_PACKAGE(LibXslt 1.1.7 REQUIRED)
find_package(ICU REQUIRED COMPONENTS data i18n uc)
find_package(Threads REQUIRED)
find_package(AVIF 0.9.0 REQUIRED)
FIND_PACKAGE(JPEG REQUIRED)
FIND_PACKAGE(PNG REQUIRED)
find_package(WebP REQUIRED COMPONENTS demux)
FIND_PACKAGE(ZLIB REQUIRED)

SET_AND_EXPOSE_TO_BUILD(USE_AVIF ON)
set(USE_ICU_UNICODE 1)

set(DATA_INSTALL_DIR "data/WebKit" CACHE PATH "Installation path for data")
set(HEADER_INSTALL_DIR "develop/headers${CMAKE_HAIKU_SECONDARY_ARCH_SUBDIR}" CACHE PATH "Installation path for header files")
set(THEME_BINARY_DIR ${CMAKE_BINARY_DIR}/WebCore/platform/efl/DefaultTheme)
set(WEB_INSPECTOR_DIR "${DATA_INSTALL_DIR}/inspector")
set(WEBINSPECTORUI_DIR "${CMAKE_SOURCE_DIR}/Source/WebInspectorUI")

add_definitions(-DDATA_DIR="${CMAKE_INSTALL_PREFIX}/${DATA_INSTALL_DIR}")

WEBKIT_OPTION_BEGIN()
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_3D_TRANSFORMS PUBLIC OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_ACCESSIBILITY PRIVATE OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_ATTACHMENT_ELEMENT PUBLIC OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_CSS_DEVICE_ADAPTATION PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_DARK_MODE_CSS PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_DATALIST_ELEMENT PUBLIC OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_DOWNLOAD_ATTRIBUTE PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_DRAG_SUPPORT PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_ENCRYPTED_MEDIA PUBLIC OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_FILTERS_LEVEL_2 PUBLIC OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_FULLSCREEN_API PUBLIC OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_GAMEPAD PUBLIC OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_GEOLOCATION PUBLIC OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_INPUT_TYPE_COLOR PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_INPUT_TYPE_DATE PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_INPUT_TYPE_DATETIMELOCAL PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_INPUT_TYPE_MONTH PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_INPUT_TYPE_TIME PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_INPUT_TYPE_WEEK PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_MEDIA_CAPTURE PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_MEDIA_CONTROLS_SCRIPT PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_MEDIA_SOURCE PUBLIC OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_MEDIA_STREAM PUBLIC OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_MEMORY_SAMPLER PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_MHTML PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_MOUSE_CURSOR_SCALE PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_NETSCAPE_PLUGIN_API PRIVATE OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_NOTIFICATIONS PUBLIC ON)
#WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_RELEASE_LOG PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_SAMPLING_PROFILER PUBLIC OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_SPEECH_SYNTHESIS PUBLIC OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_SPELLCHECK PUBLIC OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_WEB_CRYPTO PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_TOUCH_EVENTS PUBLIC OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_TOUCH_SLIDER PUBLIC OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_VIDEO PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_WEB_AUDIO PUBLIC OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_WEB_CRYPTO PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_XSLT PUBLIC ON)

WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_LEGACY_CUSTOM_PROTOCOL_MANAGER PRIVATE OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_PUBLIC_SUFFIX_LIST PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_REMOTE_INSPECTOR PRIVATE OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_SMOOTH_SCROLLING PRIVATE OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_WEBGL PRIVATE OFF)

WEBKIT_OPTION_DEFAULT_PORT_VALUE(USE_SYSTEM_MALLOC PRIVATE ON)

WEBKIT_OPTION_END()

if (ENABLE_WEBKIT AND ENABLE_NETSCAPE_PLUGIN_API)
    set(ENABLE_PLUGIN_PROCESS 1)
endif ()

IF (ENABLE_WEB_AUDIO)
    SET(USE_FFMPEG 1)
    ADD_DEFINITIONS(-DUSE_FFMPEG=1)
    ADD_DEFINITIONS(-DUSE_WEBAUDIO_FFMPEG=1)
ENDIF ()

set(USE_3D_GRAPHICS 0)
add_definitions(-DUSE_3D_GRAPHICS=0)

if (ENABLE_WEBGL)
    find_package(OpenGL REQUIRED)
    option(ENABLE_EGL ON)

    if (ENABLE_EGL)
        find_package(EGL REQUIRED)
    endif ()

    if (EGL_FOUND)
		SET_AND_EXPOSE_TO_BUILD(USE_EGL TRUE)
        option(ENABLE_GLES2 ON)

        if (ENABLE_GLES2)
            find_package(GLES REQUIRED)
        endif ()

        if (OPENGLES2_FOUND)
            set(USE_OPENGL_ES_2 1)
            add_definitions(-DUSE_OPENGL_ES_2=1)
        endif ()
    endif ()

     if (EGL_FOUND)
         set(USE_GRAPHICS_SURFACE 1)
     endif ()
endif ()

find_package(OpenSSL REQUIRED)
SET_AND_EXPOSE_TO_BUILD(USE_OPENSSL ON)

if (ENABLE_INSPECTOR)
    set(WEB_INSPECTOR_DIR "${DATA_INSTALL_DIR}/inspector")
    add_definitions(-DWEB_INSPECTOR_DIR=\"${CMAKE_BINARY_DIR}/${WEB_INSPECTOR_DIR}\")
    add_definitions(-DWEB_INSPECTOR_INSTALL_DIR=\"${CMAKE_INSTALL_PREFIX}/${WEB_INSPECTOR_DIR}\")
endif ()

# Packaging data
if(CMAKE_HAIKU_SECONDARY_ARCH)
    # Building for secondary architecture, setup the suffix
    set(PACKAGE_SUFFIX _${CMAKE_HAIKU_SECONDARY_ARCH})
endif()

# Optimize binary size for release builds by removing dead sections
if (CMAKE_BUILD_TYPE STREQUAL Release AND CMAKE_COMPILER_IS_GNUCC)
	string(APPEND CMAKE_C_FLAGS   " -ffunction-sections -fdata-sections")
	string(APPEND CMAKE_CXX_FLAGS " -ffunction-sections -fdata-sections")
	string(APPEND CMAKE_SHARED_LINKER_FLAGS " -Wl,--gc-sections")
endif ()

# Haiku actually make use of rtti in several places, so we can't really disable
# it, unlike on other platforms...
string(APPEND CMAKE_CXX_FLAGS_DEBUG   " -frtti")
string(APPEND CMAKE_CXX_FLAGS_RELEASE " -frtti")

string(TOLOWER ${CMAKE_HOST_SYSTEM_PROCESSOR} LOWERCASE_CMAKE_HOST_SYSTEM_PROCESSOR)
if (CMAKE_COMPILER_IS_GNUCC AND "${LOWERCASE_CMAKE_HOST_SYSTEM_PROCESSOR}" STREQUAL "x86")
    # i686 is the official requirement for Haiku, but WebKit really wants to use SSE2, so use
	# a 'newer' architecture here.
	string(APPEND CMAKE_C_FLAGS   " -march=pentium4")
	string(APPEND CMAKE_CXX_FLAGS " -march=pentium4")
endif()

SET_AND_EXPOSE_TO_BUILD(USE_TEXTURE_MAPPER OFF)
SET_AND_EXPOSE_TO_BUILD(USE_TEXTURE_MAPPER_GL OFF)
SET_AND_EXPOSE_TO_BUILD(ENABLE_GRAPHICS_CONTEXT_GL OFF)
SET_AND_EXPOSE_TO_BUILD(USE_EGL FALSE)
SET_AND_EXPOSE_TO_BUILD(USE_TILED_BACKING_STORE OFF)
SET_AND_EXPOSE_TO_BUILD(USE_COORDINATED_GRAPHICS OFF)
SET_AND_EXPOSE_TO_BUILD(HAVE_OS_DARK_MODE_SUPPORT 1)

set(DERIVED_SOURCES_DIR "${CMAKE_BINARY_DIR}/DerivedSources")
set(DERIVED_SOURCES_WEBKIT_DIR ${DERIVED_SOURCES_DIR}/WebKit)
set(DERIVED_SOURCES_HAIKU_API_DIR ${DERIVED_SOURCES_WEBKIT_DIR}/haiku)

set(FORWARDING_HEADERS_DIR ${DERIVED_SOURCES_DIR}/ForwardingHeaders)

if (ENABLE_WEBGL)
    set(ENABLE_WEBGL 1)
    if (USE_GRAPHICS_SURFACE)
        add_definitions(-DUSE_GRAPHICS_SURFACE=1)
    endif ()
endif ()

SET_AND_EXPOSE_TO_BUILD(ENABLE_GRAPHICS_CONTEXT_3D FALSE)

if (ENABLE_SPELLCHECK)
    find_package(Enchant REQUIRED)
endif ()

if (ENABLE_ACCESSIBILITY)
    find_package(ATK REQUIRED)
else ()
	SET_AND_EXPOSE_TO_BUILD(HAVE_ACCESSIBILITY FALSE)
endif ()

if (ENABLE_INDEXED_DATABASE)
    set(USE_LEVELDB 1)
    add_definitions(-DUSE_LEVELDB=1)
endif ()

set(JavaScriptCore_LIBRARY_TYPE SHARED)
set(SHOULD_INSTALL_JS_SHELL ON)

SET_AND_EXPOSE_TO_BUILD(USE_CURL ON)
if (USE_CURL)
    find_package(CURL 7.77.0 REQUIRED)
    find_package(LibPSL 0.20.2 REQUIRED)
endif ()
